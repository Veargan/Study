----------------------------------------------------------------------------------------------
SOLID, GRASP, TDD
Н - GUI:
1. элементы
2. события
И - управление моделью данных:
1. Collections
2. GoF
А - модель данных:
1. bean-модель - свойства(set,get), pojo - поля
2. S/D (xml, json, csv, yaml, DB)
----------------------------------------------------------------------------------------------
GoF-паттерны имеет смысл рассматривать с точки зрения центральных их отличий друг от друга
Структурные(агрегирование, наследование):
Шаблон Стратегия:
Обобщение или облегчение реализации(классы, сущности)
Шаблон Посредник:
Form один из вариантов
Шаблон Фабрика(фабричный метод):
getInstance()
Шаблон Мост: 1->1
Перевызов методов один в один 
Шаблон Декоратор: 1->1+
мост+расширение функционала 
Шаблон Адаптер: 1~1
близко к мосту, но другие имена/переменные
Шаблон Прокси: 1(:n)->1
мост+проверки(lazy load), перевызов с проверкой(if-else)
Шаблон Фасад: 1->xz
Перевызов обращение к сложной системе
Шаблон Приспособленец(облегчатель): n->1
Много перевызовов к одному и тому же объекту, но они ближе
Шаблон Компоновщик: 1->n
Самоподобный вызов(контейнер и сет чего-то и меняется у всех)
----------------------------------------------------------------------------------------------
Порождающий:
- Фабричный метод
- Фабрика (строитель) кол-во входн. Э. неограниченно. Метод создающий сложный объект
- Абстрактная фабрика механизм управления, какая фабрика будет задействована
- Одиночка без гарантии (getI), с гарантией
- Прототип (clone)
Поведенческий:
- Команда +
- Мементо +
- Chain of responsibility
- Visitor +
- Observer
- Strategy +
- State
- Iterator +
- Interpretator
- Template +
- Mediator +
is-a наследование
has-a включение